{"ast":null,"code":"var _jsxFileName = \"/Users/rehamghoneim/Desktop/capstone/capstone-client/src/components/containers/AuthFormContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../../thunks\";\nimport { AuthFormView } from \"../views\"; //import { isLoggedIn } from \"../containers/AuthFormContainer\";\n// Smart container;\n\nclass AuthFormContainer extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const formName = event.target.name;\n      console.log(\"From name from handle submit\" + formName);\n      this.props.loginOrSignup(this.state.email, this.state.password, formName); //this.props.logout();\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthFormView, {\n      name: this.props.name,\n      displayName: this.props.displayName,\n      error: this.props.error,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      isLoggedIn: this.props.isLoggedIn,\n      userEmail: this.props.userEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n; // Map state to props;\n\nconst mapLogin = state => {\n  return {\n    name: \"login\",\n    displayName: \"Login\",\n    error: state.user.error,\n    isLoggedIn: !!state.user.id,\n    userEmail: state.user.email\n  };\n}; // Map state to props;\n\n\nconst mapSignup = state => {\n  return {\n    name: \"signup\",\n    displayName: \"Sign Up\",\n    error: state.user.error,\n    isLoggedIn: !!state.user.id,\n    userEmail: state.user.email\n  };\n}; // Map state to props;  \n// const mapLogout = state => {\n//   return {\n//     name: \"logout\",\n//     displayName: \"Log Out\",\n//     error: state.user.error,                                                                               \n//     isLoggedIn: !!state.user.id,\n//     userEmail: state.user.email\n//   };\n// };\n// Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    loginOrSignup: (email, password, formName) => dispatch(auth(email, password, formName)) // logout: () => dispatch(logout())\n\n  };\n};\n\nexport const Login = connect(mapLogin, mapDispatch)(AuthFormContainer);\nexport const Signup = connect(mapSignup, mapDispatch)(AuthFormContainer); //export const isLoggedIn = connect(isLoggedIn)(AuthFormContainer);\n//export const Logout = connect(mapLogout, mapDispatch)(AuthFormContainer);","map":{"version":3,"sources":["/Users/rehamghoneim/Desktop/capstone/capstone-client/src/components/containers/AuthFormContainer.jsx"],"names":["React","Component","connect","auth","AuthFormView","AuthFormContainer","constructor","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","formName","console","log","props","loginOrSignup","state","email","password","render","displayName","error","isLoggedIn","userEmail","mapLogin","user","id","mapSignup","mapDispatch","dispatch","Login","Signup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CACA;AAGA;;AACA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACxCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,YARc,GAQEC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACD,KAVa;;AAAA,SAYdC,YAZc,GAYEL,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAMC,QAAQ,GAAGP,KAAK,CAACE,MAAN,CAAaC,IAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCF,QAA7C;AACA,WAAKG,KAAL,CAAWC,aAAX,CAAyB,KAAKC,KAAL,CAAWC,KAApC,EAA2C,KAAKD,KAAL,CAAWE,QAAtD,EAAgEP,QAAhE,EAJwB,CAKxB;AACD,KAlBa;;AAEZ,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAcDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWP,IADnB;AAEE,MAAA,WAAW,EAAE,KAAKO,KAAL,CAAWM,WAF1B;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAHpB;AAIE,MAAA,YAAY,EAAE,KAAKlB,YAJrB;AAKE,MAAA,YAAY,EAAE,KAAKM,YALrB;AAME,MAAA,UAAU,EAAE,KAAKK,KAAL,CAAWQ,UANzB;AAOE,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWS,SAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAjCuC;;AAkCzC,C,CAED;;AACA,MAAMC,QAAQ,GAAGR,KAAK,IAAI;AACxB,SAAO;AACLT,IAAAA,IAAI,EAAE,OADD;AAELa,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,KAAK,EAAEL,KAAK,CAACS,IAAN,CAAWJ,KAHb;AAILC,IAAAA,UAAU,EAAE,CAAC,CAACN,KAAK,CAACS,IAAN,CAAWC,EAJpB;AAKLH,IAAAA,SAAS,EAAEP,KAAK,CAACS,IAAN,CAAWR;AALjB,GAAP;AAOD,CARD,C,CAUA;;;AACA,MAAMU,SAAS,GAAGX,KAAK,IAAI;AACzB,SAAO;AACLT,IAAAA,IAAI,EAAE,QADD;AAELa,IAAAA,WAAW,EAAE,SAFR;AAGLC,IAAAA,KAAK,EAAEL,KAAK,CAACS,IAAN,CAAWJ,KAHb;AAILC,IAAAA,UAAU,EAAE,CAAC,CAACN,KAAK,CAACS,IAAN,CAAWC,EAJpB;AAKLH,IAAAA,SAAS,EAAEP,KAAK,CAACS,IAAN,CAAWR;AALjB,GAAP;AAOD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,MAAMW,WAAW,GAAGC,QAAQ,IAA0H;AAEpJ,SAAO;AACLd,IAAAA,aAAa,EAAE,CAACE,KAAD,EAAQC,QAAR,EAAkBP,QAAlB,KAA+BkB,QAAQ,CAAC9B,IAAI,CAACkB,KAAD,EAAQC,QAAR,EAAkBP,QAAlB,CAAL,CADjD,CAEL;;AAFK,GAAP;AAKD,CAPD;;AASA,OAAO,MAAMmB,KAAK,GAAGhC,OAAO,CAAC0B,QAAD,EAAWI,WAAX,CAAP,CAA+B3B,iBAA/B,CAAd;AACP,OAAO,MAAM8B,MAAM,GAAGjC,OAAO,CAAC6B,SAAD,EAAYC,WAAZ,CAAP,CAAgC3B,iBAAhC,CAAf,C,CACP;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"../../thunks\";\nimport { AuthFormView } from \"../views\";\n//import { isLoggedIn } from \"../containers/AuthFormContainer\";\n\n\n// Smart container;\nclass AuthFormContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\"\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const formName = event.target.name;\n    console.log(\"From name from handle submit\" + formName);\n    this.props.loginOrSignup(this.state.email, this.state.password, formName);\n    //this.props.logout();\n  }\n\n  render() {\n    return (\n      <AuthFormView\n        name={this.props.name}\n        displayName={this.props.displayName}\n        error={this.props.error}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        isLoggedIn={this.props.isLoggedIn}\n        userEmail={this.props.userEmail}\n      />\n    );\n  }\n};\n\n// Map state to props;\nconst mapLogin = state => {\n  return {\n    name: \"login\",\n    displayName: \"Login\",\n    error: state.user.error,\n    isLoggedIn: !!state.user.id,\n    userEmail: state.user.email\n  };\n};\n\n// Map state to props;\nconst mapSignup = state => {\n  return {\n    name: \"signup\",\n    displayName: \"Sign Up\",\n    error: state.user.error,\n    isLoggedIn: !!state.user.id,\n    userEmail: state.user.email\n  };             \n};\n\n// Map state to props;  \n// const mapLogout = state => {\n//   return {\n//     name: \"logout\",\n//     displayName: \"Log Out\",\n//     error: state.user.error,                                                                               \n//     isLoggedIn: !!state.user.id,\n//     userEmail: state.user.email\n//   };\n// };\n\n\n// Map dispatch to props;\nconst mapDispatch = dispatch                                                                                                                       => {\n\n  return {\n    loginOrSignup: (email, password, formName) => dispatch(auth(email, password, formName)),\n    // logout: () => dispatch(logout())\n\n  }\n};\n\nexport const Login = connect(mapLogin, mapDispatch)(AuthFormContainer);\nexport const Signup = connect(mapSignup, mapDispatch)(AuthFormContainer);\n//export const isLoggedIn = connect(isLoggedIn)(AuthFormContainer);\n//export const Logout = connect(mapLogout, mapDispatch)(AuthFormContainer);"]},"metadata":{},"sourceType":"module"}