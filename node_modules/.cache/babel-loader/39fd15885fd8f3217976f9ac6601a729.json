{"ast":null,"code":"import axios from \"axios\"; // ACTION TYPES\n\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\"; // ACTION CREATORS\n\nconst getUser = user => {\n  return {\n    type: GET_USER,\n    payload: user\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n}; // THUNK CREATORS\n\n\nexport const me = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:3000/auth/me\", {\n      withCredentials: true\n    });\n    dispatch(getUser(res.data || {}));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const auth = (email, password, method) => async dispatch => {\n  //   let res;\n  //   try {\n  //     res = await axios.post(`http://localhost:3000/auth/${method}`, { email, password }, { withCredentials: true })\n  //     .then(res =>{\n  //       dispatch(getUser(res.data))\n  //       this.context.history.push('/signup')\n  //     })\n  //   }\n  //   catch (authError) {\n  //     return dispatch(getUser({ error: authError }));\n  //   }\n  // }\n  let res;\n  await axios.post(`http://localhost:3000/auth/${method}`, {\n    email,\n    password\n  }, {\n    withCredentials: true\n  }).then(res => {\n    dispatch(getUser(res.data));\n    this.context.history.push('/signup');\n  }, authError => {\n    dispatch(getUser({\n      error: authError\n    }));\n  }).catch(dispatchOrHistoryErr => console.error(dispatchOrHistoryErr));\n};\nexport const logout = () => async dispatch => {\n  try {\n    await axios.delete(\"http://localhost:5000/auth/logout\", {\n      withCredentials: true\n    });\n    dispatch(removeUser());\n  } catch (err) {\n    console.error(err);\n  }\n}; // REDUCER\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return action.payload;\n\n    case REMOVE_USER:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/rehamghoneim/Desktop/capstone/capstone-client/src/store/utilities/user.js"],"names":["axios","GET_USER","REMOVE_USER","getUser","user","type","payload","removeUser","me","dispatch","res","get","withCredentials","data","err","console","error","auth","email","password","method","post","then","context","history","push","authError","catch","dispatchOrHistoryErr","logout","delete","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB,C,CAEA;;AACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,QADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMG,UAAU,GAAG,MAAM;AACvB,SAAO;AACLF,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJD,C,CAMA;;;AACA,OAAO,MAAMM,EAAE,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACxC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,+BAAV,EAA2C;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAA3C,CAAlB;AACAH,IAAAA,QAAQ,CAACN,OAAO,CAACO,GAAG,CAACG,IAAJ,IAAY,EAAb,CAAR,CAAR;AACD,GAHD,CAIA,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMG,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B,MAAMX,QAAN,IAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MAAIC,GAAJ;AAEE,QAAMV,KAAK,CAACqB,IAAN,CAAY,8BAA6BD,MAAO,EAAhD,EAAmD;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAnD,EAAwE;AAAEP,IAAAA,eAAe,EAAE;AAAnB,GAAxE,EACLU,IADK,CACAZ,GAAG,IAAG;AACVD,IAAAA,QAAQ,CAACN,OAAO,CAACO,GAAG,CAACG,IAAL,CAAR,CAAR;AACA,SAAKU,OAAL,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,SAA1B;AACD,GAJK,EAIHC,SAAS,IAAI;AACdjB,IAAAA,QAAQ,CAACN,OAAO,CAAC;AAACa,MAAAA,KAAK,EAAEU;AAAR,KAAD,CAAR,CAAR;AACD,GANK,EAOLC,KAPK,CAOCC,oBAAoB,IAAIb,OAAO,CAACC,KAAR,CAAcY,oBAAd,CAPzB,CAAN;AAQD,CAvBI;AA2BP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAMpB,QAAN,IAAkB;AAC5C,MAAI;AACF,UAAMT,KAAK,CAAC8B,MAAN,CAAa,mCAAb,EAAkD;AAAElB,MAAAA,eAAe,EAAE;AAAnB,KAAlD,CAAN;AACAH,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,GAHD,CAIA,OAAOO,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM,C,CAUP;;AACA,MAAMiB,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAAC5B,IAAf;AACE,SAAKJ,QAAL;AACE,aAAOgC,MAAM,CAAC3B,OAAd;;AACF,SAAKJ,WAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAO8B,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,OAAf","sourcesContent":["import axios from \"axios\";\n\n\n// ACTION TYPES\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\n\n// ACTION CREATORS\nconst getUser = user => { \n  return {\n    type: GET_USER,\n    payload: user\n  }\n}\n\nconst removeUser = () => { \n  return { \n    type: REMOVE_USER \n  }\n}\n\n// THUNK CREATORS\nexport const me = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:3000/auth/me\", { withCredentials: true });\n    dispatch(getUser(res.data || {}));\n  }\n  catch (err) {\n    console.error(err);\n  }\n};\n\nexport const auth = (email, password, method) => async dispatch => {\n//   let res;\n//   try {\n//     res = await axios.post(`http://localhost:3000/auth/${method}`, { email, password }, { withCredentials: true })\n//     .then(res =>{\n//       dispatch(getUser(res.data))\n//       this.context.history.push('/signup')\n//     })\n//   }\n//   catch (authError) {\n//     return dispatch(getUser({ error: authError }));\n//   }\n// }\n  let res;\n\n    await axios.post(`http://localhost:3000/auth/${method}`, { email, password }, { withCredentials: true })\n    .then(res =>{\n      dispatch(getUser(res.data))\n      this.context.history.push('/signup')\n    }, authError => {\n      dispatch(getUser({error: authError}))\n    })\n    .catch(dispatchOrHistoryErr => console.error(dispatchOrHistoryErr))\n  }\n\n\n\nexport const logout = () => async dispatch => {\n  try {\n    await axios.delete(\"http://localhost:5000/auth/logout\", { withCredentials: true });\n    dispatch(removeUser());\n  }\n  catch (err) {\n    console.error(err);\n  }\n};\n\n// REDUCER\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_USER:\n      return action.payload;\n    case REMOVE_USER:\n      return {};\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}